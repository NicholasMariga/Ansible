---
- name: Install Oracle 19c Database on Oracle Linux
  hosts: servers
  become: yes
  vars:
    oracle_user: oracle
    oracle_groups:
      - name: oinstall
        gid: 54321
      - name: dba
        gid: 54322
      - name: oper
        gid: 54323
    oracle_uid: 54321
    oracle_base: /u01/app/oracle
    oracle_home: /u01/app/oracle/product/19.0.0/dbhome_1
    ora_inventory: /u01/app/oraInventory
    data_dir: /u02/oradata
    scripts_dir: /home/oracle/scripts
    oracle_hostname: "{{ ansible_facts['hostname'] }}"    
    oracle_sid: cdb2
    pdb_name: cdbpdb
    zip_file_path: /tmp/LINUX.X64_193000_db_home.zip
    sys_password: SysPassword1
    pdb_password: PdbPassword1
  tasks:
    - name: Install Oracle prerequisites
      yum:
        name: oracle-database-preinstall-19c
        state: present

    - name: Update all packages
      yum:
        name: "*"
        state: latest

    - name: Download Oracle preinstall RPM
      get_url:
        url: https://yum.oracle.com/repo/OracleLinux/OL7/latest/x86_64/getPackage/oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm
        dest: /tmp/oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm

    - name: Install Oracle preinstall RPM
      yum:
        name: /tmp/oracle-database-preinstall-19c-1.0-1.el7.x86_64.rpm
        state: present

    - name: Create Oracle groups
      group:
        name: "{{ item.name }}"
        gid: "{{ item.gid }}"
      loop: "{{ oracle_groups }}"

    - name: Create Oracle user
      user:
        name: "{{ oracle_user }}"
        uid: "{{ oracle_uid }}"
        group: oinstall
        groups: dba,oper
        shell: /bin/bash
        password: oracle  # Replace with actual password

    - name: Change ownership of /u01 and /u02
      file:
        path: "{{ item }}"
        state: directory
        recurse: yes
        owner: "{{ oracle_user }}"
        group: oinstall
      loop:
        - /u01
        - /u02

    - name: Set SELinux to permissive mode
      command: setenforce 0

    - name: Stop and disable firewalld
      service:
        name: firewalld
        state: stopped
        enabled: no

    - name: Create required directories
      file:
        path: "{{ item }}"
        state: directory
        mode: '0775'
        owner: "{{ oracle_user }}"
        group: oinstall
      loop:
        - "{{ oracle_base }}"
        - "{{ oracle_home }}"
        - "{{ data_dir }}"
        - "{{ scripts_dir }}"

    - name: Create setEnv.sh script
      copy:
        dest: "{{ scripts_dir }}/setEnv.sh"
        content: |
          # Oracle Settings
          export TMP=/tmp
          export TMPDIR=$TMP

          export ORACLE_HOSTNAME={{ oracle_hostname }}
          export ORACLE_UNQNAME={{ oracle_sid }}
          export ORACLE_BASE={{ oracle_base }}
          export ORACLE_HOME={{ oracle_home }}
          export ORA_INVENTORY={{ ora_inventory }}
          export ORACLE_SID={{ oracle_sid }}
          export PDB_NAME={{ pdb_name }}
          export DATA_DIR={{ data_dir }}
          export PATH=/usr/sbin:/usr/local/bin:$PATH
          export PATH=$ORACLE_HOME/bin:$PATH
          export LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib
          export CLASSPATH=$ORACLE_HOME/jlib:$ORACLE_HOME/rdbms/jlib
        owner: "{{ oracle_user }}"
        group: oinstall
        mode: '0755'

    - name: Update .bash_profile
      lineinfile:
        dest: /home/oracle/.bash_profile
        line: ". {{ scripts_dir }}/setEnv.sh"
        state: present

    - name: Create start_all.sh script
      copy:
        dest: "{{ scripts_dir }}/start_all.sh"
        content: |
          #!/bin/bash
          . {{ scripts_dir }}/setEnv.sh

          export ORAENV_ASK=NO
          . oraenv
          export ORAENV_ASK=YES

          dbstart $ORACLE_HOME
        owner: "{{ oracle_user }}"
        group: oinstall
        mode: '0755'

    - name: Create stop_all.sh script
      copy:
        dest: "{{ scripts_dir }}/stop_all.sh"
        content: |
          #!/bin/bash
          . {{ scripts_dir }}/setEnv.sh

          export ORAENV_ASK=NO
          . oraenv
          export ORAENV_ASK=YES

          dbshut $ORACLE_HOME
        owner: "{{ oracle_user }}"
        group: oinstall
        mode: '0755'

    - name: Unzip Oracle software
      unarchive:
        src: "{{ zip_file_path }}"
        dest: "{{ oracle_home }}"
        remote_src: yes
        owner: "{{ oracle_user }}"
        group: oinstall

    - name: Run Oracle installer in silent mode
      command: >
        ./runInstaller -ignorePrereq -waitforcompletion -silent
        -responseFile {{ oracle_home }}/install/response/db_install.rsp
        oracle.install.option=INSTALL_DB_SWONLY
        ORACLE_HOSTNAME={{ oracle_hostname }}
        UNIX_GROUP_NAME=oinstall
        INVENTORY_LOCATION={{ ora_inventory }}
        SELECTED_LANGUAGES=en,en_GB
        ORACLE_HOME={{ oracle_home }}
        ORACLE_BASE={{ oracle_base }}
        oracle.install.db.InstallEdition=EE
        oracle.install.db.OSDBA_GROUP=dba
        oracle.install.db.OSBACKUPDBA_GROUP=dba
        oracle.install.db.OSDGDBA_GROUP=dba
        oracle.install.db.OSKMDBA_GROUP=dba
        oracle.install.db.OSRACDBA_GROUP=dba
        SECURITY_UPDATES_VIA_MYORACLESUPPORT=false
        DECLINE_SECURITY_UPDATES=true
      args:
        chdir: "{{ oracle_home }}"
      become_user: "{{ oracle_user }}"

    - name: Run root scripts after installation
      block:
        - name: Run orainstRoot.sh
          command: /u01/app/oraInventory/orainstRoot.sh

        - name: Run root.sh
          command: /u01/app/oracle/product/19.0.0/dbhome_1/root.sh


    - name: Start the Oracle listener
      command: lsnrctl start
      become_user: "{{ oracle_user }}"
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        PATH: "{{ oracle_home }}/bin:/usr/sbin:/usr/local/bin:/bin:/usr/bin"
      args:
        chdir: "{{ oracle_home }}"


    - name: Create Oracle database in silent mode
      command: >
        dbca -silent -createDatabase
        -templateName General_Purpose.dbc
        -gdbname {{ oracle_sid }} -sid  {{ oracle_sid }} -responseFile NO_VALUE
        -characterSet AL32UTF8
        -sysPassword {{ sys_password }}
        -systemPassword {{ sys_password }}
        -createAsContainerDatabase true
        -numberOfPDBs 1
        -pdbName {{ pdb_name }}
        -pdbAdminPassword {{ pdb_password }}
        -databaseType MULTIPURPOSE
        -memoryMgmtType auto_sga
        -totalMemory 2000
        -storageType FS
        -datafileDestination "{{ data_dir }}"
        -redoLogFileSize 50
        -emConfiguration NONE
        -ignorePreReqs
      become_user: "{{ oracle_user }}"
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/sbin:/usr/local/bin:/bin:/usr/bin"
      args:
        chdir: "{{ oracle_home }}"
        

    - name: Update /etc/oratab
      become: true
      lineinfile:
        dest: /etc/oratab
        regexp: "^{{ oracle_sid }}"
        line: "{{ oracle_sid }}:{{ oracle_home }}:Y"
        state: present
      become_user: "{{ oracle_user }}"

    - name: Set db_create_file_dest and save PDB state
      shell: |
        sqlplus / as sysdba <<EOF
        alter system set db_create_file_dest='{{ data_dir }}';
        alter pluggable database {{ pdb_name }} save state;
        exit;
        EOF
      become_user: "{{ oracle_user }}"
      environment:
        ORACLE_HOME: "{{ oracle_home }}"
        ORACLE_SID: "{{ oracle_sid }}"
        PATH: "{{ oracle_home }}/bin:/usr/sbin:/usr/local/bin:/bin:/usr/bin"
